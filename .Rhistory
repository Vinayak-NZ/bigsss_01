cor(data_path_input[, c("SCON_T1", "SCON_T2_imp", "v_534", "WFI_T1", "WFI_T2_imp")],
use = "pairwise.complete.obs")
cor(data_path_input[, c("SCON_T1", "SCON_T2_imp", "WFI_T1", "WFI_T2_imp")],
use = "pairwise.complete.obs")
apply(data_path_input[, c("SCON_T1", "SCON_T2_imp", "v_534", "WFI_T1", "WFI_T2_imp")],
2, var)
model_01 <- "
WFI_T2_imp ~ v_534 + SCON_T1 + WFI_T1
SCON_T1 ~  v_534
"
model_01_effect <- sem(model_01,
data = data_path_input,
group = "Group",
estimator = "MLM")
summary(model_01_effect, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
model_01_effect <- sem(model_01,
data = data_path_input,
se = "bootstrap",
bootstrap = 5000,
group = "Group",
estimator = "MLM")
model_01_effect <- sem(model_01,
data = data_path_input,
se = "bootstrap",
bootstrap = 5000,
group = "Group",
estimator = "ML")
summary(model_01_effect, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
model_01 <- "
WFI_T2_imp ~ SCON_T2_imp + SCON_T1 + WFI_T1 + v_534
"
model_01_effect <- sem(model_01,
data = data_path_input,
group = "Group",
estimator = "MLM")
summary(model_01_effect, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
model_01_effect <- sem(model_01,
data = data_path_input,
se = "bootstrap",
bootstrap = 5000,
estimator = "MLM")
model_01_effect <- sem(model_01,
data = data_path_input,
se = "bootstrap",
bootstrap = 5000,
group = "Group")
summary(model_01_effect, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
model_01 <- "
WFI_T2_imp ~ SCON_T2_imp + SCON_T1 + WFI_T1 + v_534
"
model_01_effect <- sem(model_01,
data = data_path_input,
group = "Group",
estimator = "MLM")
summary(model_01_effect, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
lavInspect(model_01_effect, "cov.ov")
cor(data_path_input[, c("SCON_T1", "SCON_T2_imp", "WFI_T1", "WFI_T2_imp")],
use = "pairwise.complete.obs")
model_01 <- "
WFI_T2_imp ~ I(SCON_T2_imp^2) + SCON_T2_imp + I(SCON_T1^2) + SCON_T1 + WFI_T1 + v_534
"
model_01_effect <- sem(model_01,
data = data_path_input,
group = "Group",
estimator = "MLM")
model_01 <- "
WFI_T2_imp ~ ns(SCON_T2_imp, df = 3) + SCON_T2_imp + ns(SCON_T1, df = 3) + SCON_T1 + WFI_T1 + v_534
"
model_01_effect <- sem(model_01,
data = data_path_input,
group = "Group",
estimator = "MLM")
data_path_input <- data_imputed_pooled[,
c("id",
"Group",
"v_534",
"SCON_T1",
"SCON_T2_imp",
"WFI_T1",
"WFI_T2_imp")]
data_path_input <- data_path_input[complete.cases(data_path_input),]
data_path_input$id <- as.factor(data_path_input$id)
data_path_input$SCON_T1_sq <- data_path_input$SCON_T1^2
data_path_input$SCON_T2_sq <- data_path_input$SCON_T2_imp^2
model_01 <- "
WFI_T2_imp ~ SCON_T2_sq + SCON_T2_imp + SCON_T1_sq + SCON_T1 + WFI_T1 + v_534
"
model_01_effect <- sem(model_01,
data = data_path_input,
group = "Group",
estimator = "MLM")
summary(model_01_effect, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
lavInspect(model_01_effect, "cov.ov")
cor(data_path_input[, c("SCON_T1", "SCON_T2_imp", "WFI_T1", "WFI_T2_imp")],
use = "pairwise.complete.obs")
cor(data_path_input[, c("SCON_T1", "SCON_T2_imp", "WFI_T1", "WFI_T2_imp", "SCON_T1_sq", "SCON_T2_sq")],
use = "pairwise.complete.obs")
source("R/04_post_impute_edits.R")
source("R/04_post_impute_single.R")
View(data_imputed_pooled_all)
library(mediation)
model_a <- lmer(SCON ~ Group*time + stress + Age + sex + (1 | id),
data = data_imputed_pooled_all)
model_b <- lmer(WFI ~ Group*time + SCON + stress + Age + sex + (1 | id),
data = data_imputed_pooled_all)
# mediation model
med_model <- mediate(model_a, model_b, treat = "Group", mediator = "SCON",
boot = TRUE, sims = 5000)
# mediation model
med_model <- mediate(model_a, model_b, treat = "Group", mediator = "SCON",
boot = FALSE, sims = 5000)
summary(med_model)
plot(data_imputed_pooled_all$Age)
plot(data_imputed_pooled_all$Age, data_imputed_pooled_all$SCON)
cor(data_imputed_pooled_all$Age, data_imputed_pooled_all$SCON)
View(data_input)
View(data_input_merged)
data_input_merged$AgeDum
data_imputed_pooled_all[["age_cat"]] <- ifelse(data_imputed_pooled_all[["Age"]] < 31, 1,
ifelse(data_imputed_pooled_all[["Age"]] >= 31 &
data_imputed_pooled_all[["Age"]] < 41, 2,
data_imputed_pooled_all[["Age"]] >= 41 &
data_imputed_pooled_all[["Age"]] < 51, 3, 4))
data_imputed_pooled_all[["age_cat"]] <- ifelse(data_imputed_pooled_all[["Age"]] < 31, 1,
ifelse(data_imputed_pooled_all[["Age"]] >= 31 &
data_imputed_pooled_all[["Age"]] < 41, 2,
ifelse(data_imputed_pooled_all[["Age"]] >= 41 &
data_imputed_pooled_all[["Age"]] < 51, 3, 4)))
View(data_imputed_pooled_all)
# self-control-model
model_a <- lmer(SCON ~ Group*time + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
# self-control-model
model_a <- lmer(SCON ~ Group*time + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
model_b <- lmer(WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
# work-family-interference-model
med_model <- mediate(model_a, model_b, treat = "Group", mediator = "SCON",
boot = FALSE, sims = 5000)
summary(med_model)
summary(model_a)
summary(model_b)
summary(med_model)
# linear-model
model_linear <- lmer(WFI ~ Group*time*SCON + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
# non-linear-model
model_non_linear <- lmer(WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
# Compare models using ANOVA
anova(model_linear, model_non_linear)
# summary of non-linear-model
summary(model_non_linear)
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(Group))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE) +
theme_minimal() +
labs(title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)", y = "Work-Family Interference (WFI)")
hist(data_input_merged$SCON_T2-data_input_merged$SCON_T1)
hist(data_imputed_pooled$SCON_T2-data_imputed_pooled$SCON_T1)
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE) +
facet_wrap(~ Group) +  # Facet by intervention/control group
theme_minimal() +
labs(
title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)",
color = "Time"
)
corr(data_imputed_pooled$SCON_T1, data_imputed_pooled$SCON_T2)
cor(data_imputed_pooled$SCON_T1, data_imputed_pooled$SCON_T2)
corr(data_imputed_pooled$SCON_T1, data_imputed_pooled$SCON_T2, method = 'pearson')
cor(data_imputed_pooled$SCON_T1, data_imputed_pooled$SCON_T2, method = 'pearson')
cor(data_imputed_pooled$SCON_T1, data_imputed_pooled$SCON_T2, use = 'complete.obs')
View(data_imputed_pooled)
cor(data_imputed_pooled$SCON_T1, data_imputed_pooled$SCON_T2_imp, use = 'complete.obs')
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(Group))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = y ~ ns(x, 3), se = TRUE) +
facet_wrap(~ time) +
theme_minimal() +
labs(title = "Spline Fit for Self-Control and WFI",
x = "Self-Control (SCON)", y = "Work-Family Interference (WFI)")
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE) +
facet_wrap(~ Group) +  # Facet by intervention/control group
theme_minimal() +
labs(
title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)",
color = "Time"
)
View(data_imputed_pooled)
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE) +
facet_wrap(~ Group) +
labs(
title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)",
color = "Time"
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
group_labels <- c("Control", "Intervention")
names(group_labesl) <- c(0, 1)
group_labels <- c("Control", "Intervention")
names(group_labels) <- c(0, 1)
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE) +
facet_wrap(~ Group, labeller = labeller(Group = group_labels)) +
labs(
title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)",
color = "Time"
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
group_labels <- c("Control", "Intervention")
names(group_labels) <- c(0, 1)
colour_vals <- c("#FFC0CB", "#00008B")
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3) +
scale_color_manual(values = colour_vals) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE) +
facet_wrap(~ Group, labeller = labeller(Group = group_labels)) +
labs(
title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)",
color = "Time"
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
colour_vals <- c("#FFA500", "#00008B")
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3, size = 4) +
scale_color_manual(values = colour_vals) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE) +
facet_wrap(~ Group, labeller = labeller(Group = group_labels)) +
labs(
title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)",
color = "Time"
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3, size = 4) +
scale_color_manual(values = colour_vals) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE, size = 3) +
facet_wrap(~ Group, labeller = labeller(Group = group_labels)) +
labs(
title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)",
color = "Time"
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
model_01 <- SCON ~ Group*time + stress + Age + sex + (1 | id)
model_02 <- WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id)
mice_models_01 <- list()
mice_models_02 <- list()
mice_models_summary_01 <- list()
mice_models_summary_02 <- list()
M <- length(data_imputed_output)
for (mm in 1:M){
mice_models_01[[mm]] <- lme4::lmer(model_01, data = data_imputed_output[[mm]], REML=FALSE)
mice_models_summary_01[[mm]] <- summary(mice_models_01[[mm]])$coefficients[2]
mice_models_02[[mm]] <- lme4::lmer(model_02, data = data_imputed_output[[mm]], REML=FALSE)
mice_models_summary_02[[mm]] <- summary(mice_models_02[[mm]])$coefficients[2]
}
source("R/04_post_impute_edits.R")
i <- 1
data_imputed_output[[i]] <- data_imputed_output[[i]][, c("id",
"Group",
"Age",
"v_236",
"v_534",
"SCON_T1",
"SCON_T2",
"WFI_T1",
"WFI_T2")]
View(data_imputed)
View(data_imputed_pooled)
View(data_imputed_output)
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
source("R/04_post_impute_single.R")
source("R/05_build_mixed_effects_models.R")
mice_pooled_model_01 <- lmer_pool(mice_models_01, level = .95)
mice_pooled_model_02 <- lmer_pool(mice_models_02, level = .95)
mice_pooled_output_model_01 <- summary(mice_pooled_model_01)
mice_pooled_output_model_02 <- summary(mice_pooled_model_02)
source("R/05_build_mixed_effects_models.R")
mice_pooled_model_01 <- lmer_pool(mice_models_01, level = .95)
mice_pooled_model_02 <- lmer_pool(mice_models_02, level = .95)
mice_pooled_output_model_01 <- summary(mice_pooled_model_01)
mice_pooled_output_model_02 <- summary(mice_pooled_model_02)
mice_treatment_effect_model_01 <- unlist(mice_models_summary_01, use.names=FALSE)
mice_treatment_effect_model_02 <- unlist(mice_models_summary_02, use.names=FALSE)
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
source("R/04_post_impute_single.R")
# linear-model
model_linear <- lmer(WFI ~ Group*time*SCON + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
# non-linear-model
model_non_linear <- lmer(WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
# Compare models using ANOVA
anova(model_linear, model_non_linear)
# summary of non-linear-model
summary(model_non_linear)
typeof(data_imputed_pooled_all$sex)
typeof(data_imputed_pooled_all$stress)
source("R/04_post_impute_single.R")
# linear-model
model_linear <- lmer(WFI ~ Group*time*SCON + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
# non-linear-model
model_non_linear <- lmer(WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
# Compare models using ANOVA
anova(model_linear, model_non_linear)
# summary of non-linear-model
summary(model_non_linear)
source("R/05_build_mixed_effects_models.R")
data_imputed_pooled_all$stress
typeof(data_imputed_pooled_all$stress)
typeof(data_imputed_pooled_all$sex)
typeof(data_imputed_pooled_all$age_cat)
typeof(data_imputed_pooled_all$time)
class(data_imputed_pooled_all$time)
class(data_imputed_pooled_all$age_cat)
class(data_imputed_pooled_all$stress)
mice_pooled_model_01 <- lmer_pool(mice_models_01, level = .95)
mice_pooled_model_02 <- lmer_pool(mice_models_02, level = .95)
mice_pooled_output_model_01 <- summary(mice_pooled_model_01)
mice_pooled_output_model_02 <- summary(mice_pooled_model_02)
mice_treatment_effect_model_01 <- unlist(mice_models_summary_01, use.names=FALSE)
mice_treatment_effect_model_02 <- unlist(mice_models_summary_02, use.names=FALSE)
mice_pooled_output_model_02 <- summary(mice_pooled_model_02)
model_stress <- lmer(WFI ~ Group*time*stress + age_cat + sex + (1 | id),
data = data_imputed_pooled_all)
summary(model_stress)
anova(model_non_linear, model_stress)
anova(model_linear, model_stress)
cor(data_imputed_pooled_all$WFI, data_imputed_pooled_all$stress)
cor(data_imputed_pooled_all$WFI, data_imputed_pooled_all$stress, method = 'spearman')
cor.test(data_imputed_pooled_all$WFI, data_imputed_pooled_all$stress, method = 'spearman')
cor.test(data_imputed_pooled_all$WFI, data_imputed_pooled_all$stress, method = c("spearman"))
wfi <- data_imputed_pooled_all$WFI
stress <- data_imputed_pooled_all$stress
cor.test(wfi, stress, method = c("spearman"))
?cor.test
stress
cor.test(wfi, as.numeric(stress), method = c("spearman"))
source("R/00_load_packages.R")
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
source("R/04_post_impute_single.R")
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm_02 <- brm(WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 2,
iter = 1000,
warmup = 500,
control = list(adapt_delta = 0.8))
saveRDS(model_brm_02, file = "output/model_brm_02_2025_03_12.rds")
summary(model_brm_02)
# linear-model
model_linear <- lmer(WFI ~ Group*time*SCON + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
REML = FALSE,
data = data_imputed_pooled_all)
# linear-model
model_linear <- glmer(WFI ~ Group*time*SCON + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
REML = FALSE,
data = data_imputed_pooled_all)
# linear-model
model_linear <- glmer(WFI ~ Group*time*SCON + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all)
# non-linear-model
model_non_linear <- glmer(WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all)
data_imputed_pooled_all$SCON_scaled <- scale(data_imputed_pooled_all$SCON)
# linear-model
model_linear <- glmer(WFI ~ Group*time*SCON_scaled + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all)
# non-linear-model
model_non_linear <- glmer(WFI ~ Group*time*I(SCON_scaled^2) + Group*time*SCON_scaled + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all)
# linear-model
model_linear <- glmer(WFI ~ Group*time*SCON_scaled + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all,
control = glmerControl(optimizer = "bobyqa"))
# non-linear-model
model_non_linear <- glmer(WFI ~ Group*time*I(SCON_scaled^2) + Group*time*SCON_scaled + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all,
control = glmerControl(optimizer = "bobyqa"))
# Compare models using ANOVA
anova(model_linear, model_non_linear)
# summary of non-linear-model
summary(model_non_linear)
# non-linear-model
model_non_linear <- glmer(WFI ~ Group*time*I(SCON_scaled^2) + Group*time*SCON_scaled + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all,
control = glmerControl(optimizer = "nloptwrap", calc.derivs = FALSE))
# Compare models using ANOVA
anova(model_linear, model_non_linear)
# summary of non-linear-model
summary(model_non_linear)
test <- glmer(SCON ~ Group*time + stress + age_cat + sex + (1 | id),
family = gaussian(link = "log"),
data = data_imputed_pooled_all)
test <- glmer(SCON ~ Group*time + stress + age_cat + sex + (1 | id),
family = gaussian(link = "log"),
data = data_imputed_pooled_all,
control = glmerControl(optimizer = "nloptwrap", calc.derivs = FALSE))
summary(test)
model_01 <- SCON ~ Group*time + stress + age_cat + sex + (1 | id)
model_02 <- WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id)
mice_models_01 <- list()
mice_models_02 <- list()
mice_models_summary_01 <- list()
mice_models_summary_02 <- list()
M <- length(data_imputed_output)
for (mm in 1:M){
mice_models_01[[mm]] <- lme4::glmer(model_01,
data = data_imputed_output[[mm]],
family = gaussian(link = "log"),
control = glmerControl(optimizer = "nloptwrap", calc.derivs = FALSE))
mice_models_summary_01[[mm]] <- summary(mice_models_01[[mm]])$coefficients[2]
mice_models_02[[mm]] <- lme4::glmer(model_02,
data = data_imputed_output[[mm]],
family = Gamma(link = "log"),
control = glmerControl(optimizer = "nloptwrap", calc.derivs = FALSE))
mice_models_summary_02[[mm]] <- summary(mice_models_02[[mm]])$coefficients[2]
}
saveRDS(model_01_list, file = "output/model_01_list.RData")
saveRDS(mice_models_01, file = "output/model_01_list.RData")
saveRDS(mice_models_02, file = "output/model_02_list.RData")
saveRDS(mice_models_summary_01, file = "output/model_01_summary.RData")
saveRDS(mice_models_summary_02, file = "output/model_02_summary.RData")
mice_pooled_model_01 <- lmer_pool(mice_models_01, level = .95)
mice_pooled_model_02 <- lmer_pool(mice_models_02, level = .95)
mice_pooled_output_model_01 <- summary(mice_pooled_model_01)
summary(mice_models_01[[1]])
test <- summary(mice_models_01[[1]])
test$coefficients
test$coefficients[[2]]
test$coefficients[2]
sd_model_01 <- lme4::glmer(SCON ~ Group*time + stress + Age + sex + (1 | id),
data = data_imputed_output[[mm]],
family = gaussian(link = "log"),
control = glmerControl(optimizer = "nloptwrap", calc.derivs = FALSE))
sd_model_02 <- lme4::glmer(WFI ~ Group*time*I(SCON^2) + Group*time*SCON + stress + age_cat + sex + (1 | id),
data = data_imputed_output[[mm]],
family = Gamma(link = "log"),
control = glmerControl(optimizer = "nloptwrap", calc.derivs = FALSE))
summary(sd_model_01)
summary(sd_model_02)
