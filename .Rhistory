qqline(ranef_model$id[, "(Intercept)"], col = "red")
install.packages("car")
library(car)
vif(test_model_01)
plot(data_input$WFI_T1, data_input$SCON_T1)
plot(data_input$WFI_T1, data_input$stress)
plot(data_input$WFI_T1, data_input$age)
plot(data_input$WFI_T1, data_input$SCON_T1)
plot(data_input$WFI_T1, data_input$stress)
plot(data_input$WFI_T1, data_input$SCON_T1)
plot(data_input$WFI_T1, data_input$stress)
plot(data_input$WFI_T1, data_input$age)
data$SCON_sq <- data$SCON_T1^2  # Quadratic term
data_input$SCON_sq <- data_input$SCON_T1^2  # Quadratic term
plot(data_input$WFI_T1, data_input$SCON_sq)
plot(data_input$WFI_T1, data_input$SCON_T1)
plot(data_input$WFI_T1, data_input$SCON_T1)
plot(data_input$WFI_T1, data_input$v_534)
plot(data_input$WFI_T1, data_input$Age)
plot(data_input$WFI_T1, data_input$SCON_T1)
plot(data_input$WFI_T1, data_input$v_534)
plot(data_input$WFI_T1, data_input$Age)
install.packages("ordinal")
library(ordinal)
model_ordinal <- clmm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id), data = data_imputed_pooled_all)
data_imputed_pooled_all$WFI <- as.factor(data_imputed_pooled_all$WFI)
model_ordinal <- clmm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id), data = data_imputed_pooled_all)
model_ordinal
summary(model_ordinal)
data_imputed_pooled_all <- cbind(data_input[, exclude_vars], data_imputed_pooled)
data_imputed_pooled_all <- data_imputed_pooled_all[, c("id",
"Group",
"Age",
"v_236",
"v_534",
"SCON_T1",
"SCON_T2_imp",
"WFI_T1",
"WFI_T2_imp")]
setDT(data_imputed_pooled_all)
data_imputed_pooled_all <- melt(data_imputed_pooled_all,
id.vars = c("id",
"Group",
"Age",
"v_236",
"v_534"),
measure.vars = list(c("SCON_T1", "SCON_T2_imp"), c("WFI_T1", "WFI_T2_imp")),
variable.name = "time",
value.name = c("SCON", "WFI"))
data_imputed_pooled_all[, "time"] <- ifelse(data_imputed_pooled_all[, "time"] == 1,
"baseline", "follow-up")
data_imputed_pooled_all$time <- as.factor(data_imputed_pooled_all$time)
data_imputed_pooled_all$sex <- as.factor(data_imputed_output[[i]]$v_236)
data_imputed_pooled_all[["stress"]] <- abs(as.numeric(data_imputed_pooled_all[["v_534"]]))
data_imputed_pooled_all[["SCON"]] <- abs(as.numeric(data_imputed_pooled_all[["SCON"]]))
data_imputed_pooled_all[["WFI"]] <- abs(as.numeric(data_imputed_pooled_all[["WFI"]]))
data_imputed_pooled_all <- as.data.frame(data_imputed_pooled_all)
test_model_01 <- lme4::lmer(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
data = data_imputed_pooled_all,
REML=FALSE)
test_model_02 <- lme4::lmer(SCON ~ Group*time + stress + Age + sex + (1 | id),
data = data_imputed_pooled_all,
REML=FALSE)
# homoscedasticity
hist(resid(test_model_01), breaks = 20, main = "Histogram of residuals")
# homoscedasticity
plot(fitted(test_model_01), abs(resid(test_model_01)))
install.packages("glmmTMB")
library(glmmTMB)
model_glmm <- glmmTMB(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = poisson(link = "log"),
data = data_imputed_pooled_all)
hist(data_imputed_pooled_all$SCON)
hist(data_imputed_pooled_all$WFI)
hist(data_imputed_pooled_all$stress)
# linearity
plot(log(data_input$WFI_T1+1), data_input$SCON_T1)
hist(data_imputed_pooled_all$WFI)
model_glmm <- glmmTMB(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all)
summary(model_glmm)
hist(data_imputed_pooled_all$WFI)
plot(data_imputed_pooled_all$WFI, data_imputed_pooled_all$SCON)
plot(log(data_imputed_pooled_all$WFI + 1), data_imputed_pooled_all$SCON)
plot(log(data_imputed_pooled_all$WFI), data_imputed_pooled_all$SCON)
plot(data_imputed_pooled_all$WFI^2, data_imputed_pooled_all$SCON)
install.packages("brms")
library(brms)
model_brm <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = complete(data_imputed, "long"),  # Use your dataset
chains = 4,
iter = 4000)
test <- complete(data_imputed, "long")
View(test)
for (i in 1:length(data_imputed_output)){
data_imputed_output[[i]] <- data_imputed_output[[i]][, c("id",
"Group",
"Age",
"v_236",
"v_534",
"SCON_T1",
"SCON_T2",
"WFI_T1",
"WFI_T2")]
setDT(data_imputed_output[[i]])
data_imputed_output[[i]] <- melt(data_imputed_output[[i]],
id.vars = c("id",
"Group",
"Age",
"v_236",
"v_534"),
measure.vars = list(c("SCON_T1", "SCON_T2"), c("WFI_T1", "WFI_T2")),
variable.name = "time",
value.name = c("SCON", "WFI"))
data_imputed_output[[i]][, "time"] <- ifelse(data_imputed_output[[i]][, "time"] == 1,
"baseline", "follow-up")
data_imputed_output[[i]]$time <- as.factor(data_imputed_output[[i]]$time)
data_imputed_output[[i]]$sex <- as.factor(data_imputed_output[[i]]$v_236)
data_imputed_output[[i]][["stress"]] <- abs(as.numeric(data_imputed_output[[i]][["v_534"]]))
data_imputed_output[[i]][["SCON"]] <- abs(as.numeric(data_imputed_output[[i]][["SCON"]]))
data_imputed_output[[i]][["WFI"]] <- abs(as.numeric(data_imputed_output[[i]][["WFI"]]))
data_imputed_output[[i]] <- as.data.frame(data_imputed_output[[i]])
data_imputed_output[[i]]$.id <- data_imputed_output[[i]]$id
data_imputed_output[[i]]$.imp <- i
}
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
for (i in 1:length(data_imputed_output)){
data_imputed_output[[i]] <- data_imputed_output[[i]][, c("id",
"Group",
"Age",
"v_236",
"v_534",
"SCON_T1",
"SCON_T2",
"WFI_T1",
"WFI_T2")]
setDT(data_imputed_output[[i]])
data_imputed_output[[i]] <- melt(data_imputed_output[[i]],
id.vars = c("id",
"Group",
"Age",
"v_236",
"v_534"),
measure.vars = list(c("SCON_T1", "SCON_T2"), c("WFI_T1", "WFI_T2")),
variable.name = "time",
value.name = c("SCON", "WFI"))
data_imputed_output[[i]][, "time"] <- ifelse(data_imputed_output[[i]][, "time"] == 1,
"baseline", "follow-up")
data_imputed_output[[i]]$time <- as.factor(data_imputed_output[[i]]$time)
data_imputed_output[[i]]$sex <- as.factor(data_imputed_output[[i]]$v_236)
data_imputed_output[[i]][["stress"]] <- abs(as.numeric(data_imputed_output[[i]][["v_534"]]))
data_imputed_output[[i]][["SCON"]] <- abs(as.numeric(data_imputed_output[[i]][["SCON"]]))
data_imputed_output[[i]][["WFI"]] <- abs(as.numeric(data_imputed_output[[i]][["WFI"]]))
data_imputed_output[[i]] <- as.data.frame(data_imputed_output[[i]])
data_imputed_output[[i]]$.id <- data_imputed_output[[i]]$id
data_imputed_output[[i]]$.imp <- i
}
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,  # Use your dataset
chains = 4,
iter = 4000)
model_brm <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,  # Use your dataset
chains = 2,
iter = 1000,
warmup = 500,
control = list(adapt_delta = 0.8))
model_brm
View(data_imputed_pooled_all)
View(data_imputed)
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
library(brms)
library(brms)
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,  # Use your dataset
chains = 2,
iter = 1000,
warmup = 500,
control = list(adapt_delta = 0.8))
View(data_imputed_long)
source("R/04_post_impute_edits.R")
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,  # Use your dataset
chains = 2,
iter = 1000,
warmup = 500,
control = list(adapt_delta = 0.8))
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
data_imputed_pooled_all <- cbind(data_input[, exclude_vars], data_imputed_pooled)
data_imputed_pooled_all <- data_imputed_pooled_all[, c("id",
"Group",
"Age",
"v_236",
"v_534",
"SCON_T1",
"SCON_T2_imp",
"WFI_T1",
"WFI_T2_imp")]
setDT(data_imputed_pooled_all)
data_imputed_pooled_all <- melt(data_imputed_pooled_all,
id.vars = c("id",
"Group",
"Age",
"v_236",
"v_534"),
measure.vars = list(c("SCON_T1", "SCON_T2_imp"), c("WFI_T1", "WFI_T2_imp")),
variable.name = "time",
value.name = c("SCON", "WFI"))
data_imputed_pooled_all[, "time"] <- ifelse(data_imputed_pooled_all[, "time"] == 1,
"baseline", "follow-up")
data_imputed_pooled_all$time <- as.factor(data_imputed_pooled_all$time)
data_imputed_pooled_all$sex <- as.factor(data_imputed_output[[i]]$v_236)
data_imputed_pooled_all[["stress"]] <- abs(as.numeric(data_imputed_pooled_all[["v_534"]]))
data_imputed_pooled_all[["SCON"]] <- abs(as.numeric(data_imputed_pooled_all[["SCON"]]))
data_imputed_pooled_all[["WFI"]] <- abs(as.numeric(data_imputed_pooled_all[["WFI"]]))
data_imputed_pooled_all <- as.data.frame(data_imputed_pooled_all)
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI)) +
geom_point(alpha = 0.4) +  # Scatterplot
geom_smooth(method = "loess", color = "blue", se = TRUE) +  # LOESS smoother
geom_smooth(method = "lm", color = "red", linetype = "dashed") +  # Linear model
theme_minimal() +
labs(title = "WFI vs. SCON: Checking Linearity",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)")
ggplot(data_input, aes(x = SCON_T1, y = WFI_T1)) +
geom_point(alpha = 0.4) +  # Scatterplot
geom_smooth(method = "loess", color = "blue", se = TRUE) +  # LOESS smoother
geom_smooth(method = "lm", color = "red", linetype = "dashed") +  # Linear model
theme_minimal() +
labs(title = "WFI vs. SCON: Checking Linearity",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)")
ggplot(data_input, aes(x = SCON_T2, y = WFI_T2)) +
geom_point(alpha = 0.4) +  # Scatterplot
geom_smooth(method = "loess", color = "blue", se = TRUE) +  # LOESS smoother
geom_smooth(method = "lm", color = "red", linetype = "dashed") +  # Linear model
theme_minimal() +
labs(title = "WFI vs. SCON: Checking Linearity",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)")
install.packages("mgcv")
library(mgcv)
model_gam <- gam(WFI ~ Group*time + s(SCON)*time + stress + Age + sex + s(id, bs = "re"),
data = data_imputed_pooled_all, method = "REML")
model_gam <- gam(WFI ~ Group*time + s(SCON, by = time) + stress + Age + sex + s(id, bs = "re"),
data = data_imputed_pooled_all, method = "REML")
summary(model_gam)
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), color = "red") +
theme_minimal() +
labs(title = "Quadratic Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)")
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
model_brm_quad_interaction <- brm(WFI ~ Group * time + SCON + I(SCON^2) +
time:SCON + time:I(SCON^2) +
stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 4,
iter = 4000)
library(brms)
model_brm_quad_interaction <- brm(WFI ~ Group * time + SCON + I(SCON^2) +
time:SCON + time:I(SCON^2) +
stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 4,
iter = 4000)
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm_quad_interaction <- brm(WFI ~ Group * time + SCON + I(SCON^2) +
time:SCON + time:I(SCON^2) +
stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 4,
iter = 4000)
model_brm_quad_test <- brm(WFI ~ I(SCON^2),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 2,
iter = 1000)
model_brm_quad_test <- brm(WFI ~ I(SCON^2),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 2,
iter = 1000)
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm_quad_test <- brm(WFI ~ I(SCON^2),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 2,
iter = 1000)
library(brms)
model_brm_quad_test <- brm(WFI ~ I(SCON^2),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 2,
iter = 1000)
summary(model_brm_quad_test)
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,  # Use your dataset
chains = 4,
iter = 4000,
warmup = 500,
control = list(adapt_delta = 0.8))
model_brm <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,  # Use your dataset
chains = 2,
iter = 1000,
warmup = 500,
control = list(adapt_delta = 0.8))
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI)) +
geom_point(alpha = 0.4) +  # Scatterplot
geom_smooth(method = "loess", color = "blue", se = TRUE) +  # LOESS smoother
geom_smooth(method = "lm", color = "red", linetype = "dashed") +  # Linear model
theme_minimal() +
labs(title = "WFI vs. SCON: Checking Linearity",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)") +
ylab("Work family interference") +
xlab("Self-control") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI)) +
geom_point(alpha = 0.4) +  # Scatterplot
geom_smooth(method = "loess", color = "blue", se = TRUE) +  # LOESS smoother
geom_smooth(method = "lm", color = "red", linetype = "dashed") +  # Linear model
theme_minimal() +
labs(title = "WFI vs. SCON: Checking Linearity",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)") +
ylab("Work family interference") +
xlab("Self-control") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
data_imputed_pooled_all <- cbind(data_input[, exclude_vars], data_imputed_pooled)
data_imputed_pooled_all <- data_imputed_pooled_all[, c("id",
"Group",
"Age",
"v_236",
"v_534",
"SCON_T1",
"SCON_T2_imp",
"WFI_T1",
"WFI_T2_imp")]
setDT(data_imputed_pooled_all)
data_imputed_pooled_all <- melt(data_imputed_pooled_all,
id.vars = c("id",
"Group",
"Age",
"v_236",
"v_534"),
measure.vars = list(c("SCON_T1", "SCON_T2_imp"), c("WFI_T1", "WFI_T2_imp")),
variable.name = "time",
value.name = c("SCON", "WFI"))
data_imputed_pooled_all[, "time"] <- ifelse(data_imputed_pooled_all[, "time"] == 1,
"baseline", "follow-up")
data_imputed_pooled_all$time <- as.factor(data_imputed_pooled_all$time)
data_imputed_pooled_all$sex <- as.factor(data_imputed_output[[i]]$v_236)
data_imputed_pooled_all[["stress"]] <- abs(as.numeric(data_imputed_pooled_all[["v_534"]]))
data_imputed_pooled_all[["SCON"]] <- abs(as.numeric(data_imputed_pooled_all[["SCON"]]))
data_imputed_pooled_all[["WFI"]] <- abs(as.numeric(data_imputed_pooled_all[["WFI"]]))
data_imputed_pooled_all <- as.data.frame(data_imputed_pooled_all)
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI)) +
geom_point(alpha = 0.4) +  # Scatterplot
geom_smooth(method = "loess", color = "blue", se = TRUE) +  # LOESS smoother
geom_smooth(method = "lm", color = "red", linetype = "dashed") +  # Linear model
theme_minimal() +
labs(title = "WFI vs. SCON: Checking Linearity",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)") +
ylab("Work family interference") +
xlab("Self-control") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI)) +
geom_point(alpha = 0.4) +  # Scatterplot
geom_smooth(method = "loess", color = "blue", se = TRUE) +  # LOESS smoother
geom_smooth(method = "lm", color = "red", linetype = "dashed") +  # Linear model
labs(title = "WFI vs. SCON: Checking Linearity",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)") +
ylab("Work family interference") +
xlab("Self-control") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
source("R/00_load_packages.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
warnings()
data_imputed$loggedEvents
View(data_imputed)
colnames(data_imputed$imp[[1]])
colnames(data_imputed_pooled)
rownames(data_imputed_pooled_all)[1:10]
rownames(data_imputed_pooled)[1:10]
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
source("R/04_post_impute_single.R")
source("R/05_build_mixed_effects_models.R")
source("R/05_build_gam_models.R")
summary(model_gam_01)
gam.check(model_gam_01)
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal()
hist(data_input$SCON_T1)
hist(data_input$SCON_T2)
hist(data_input$WFI_T1)
hist(data_input$WFI_T2)
hist(data_input$WFI_T1)
hist(data_input$SCON_T2)
model_gam_01 <- gam(WFI ~ Group*time +
s(SCON, by = time) +
stress +
Age +
sex +
s(id, bs = "re"),
family = Gamma(link = "log"),
data = data_imputed_pooled_all,
method = "REML")
summary(model_gam_01)
model_gam_02 <- gam(SCON ~ Group*time +
stress +
Age +
sex +
s(id, bs = "re"),
family = gaussian(link = "log"),
data = data_imputed_pooled_all,
method = "REML")
summary(model_gam_02)
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm_01 <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 4,
iter = 4000,
warmup = 500,
control = list(adapt_delta = 0.8))
source("R/00_load_packages.R")
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm_01 <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 4,
iter = 2000,
warmup = 500)
source("R/00_load_packages.R")
data_imputed_long <- do.call(rbind, data_imputed_output)
model_brm_01 <- brm(WFI ~ Group*time + SCON*time + stress + Age + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_long,
chains = 2,
iter = 1000,
warmup = 500)
