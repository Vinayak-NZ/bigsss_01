emmeans_summary[, c("group", "time", "SCON_group", "predicted_mean",
"lower_CI", "upper_CI")]
# plot conditional effects
ggplot(emmeans_summary, aes(x = group, y = predicted_mean, color = factor(time))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Intervention Exposure",
y = "Predicted Work-Family Interference (WFI)",
color = "Time") +
scale_color_manual(values = c("red", "blue"), labels = c("Baseline", "Follow-up")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
source("R/00_load_packages.R")
source("R/00_set_date.R")
source("R/00_load_models.R")
source("R/01_load_data.R")
source("R/02_edit_data.R")
source("R/03_impute_data.R")
source("R/04_post_impute_edits.R")
source("R/04_post_impute_single.R")
source("R/04_data_edits_outliers.R")
source("R/04_data_edit_outliers.R")
View(data_imputed_pooled_all)
View(data_imputed_output)
source("R/04_post_impute_single.R")
View(data_imputed_pooled_all)
model_brm_01 <- readRDS("output/model_brm_01_2025-03-17.rds")
model_brm_02 <- readRDS("output/model_brm_02_2025-03-17.rds")
# Define low, moderate, and high levels of self-control (e.g., +/- 1 SD from mean)
SCON_levels <- c(-4, -1, 2)  # Standardized values, adjust based on dataset distribution
# Run simple slopes analysis at different levels of self-control
em_simple_slopes <- emtrends(model_brm_02, ~ group * time,
var = "SCON_scaled",  # Examine the slope of SCON
at = list(SCON_scaled = SCON_levels))
# Display results
summary(em_simple_slopes)
# Run simple slopes analysis at different levels of self-control
em_simple_slopes <- emtrends(model_brm_02, ~ group * time,
var = "I(SCON_scaled^2)",  # Examine the slope of SCON
at = list(SCON_scaled = SCON_levels))
# Display results
summary(em_simple_slopes)
?emtrends
# create data frame of predictions (control for age, sex, stress)
most_common_stress <-
names(sort(table(data_imputed_long$stress), decreasing = TRUE))[1]
most_common_age <-
names(sort(table(data_imputed_long$age_cat), decreasing = TRUE))[1]
data_imputed_long <- do.call(rbind, data_imputed_output)
# create data frame of predictions (control for age, sex, stress)
most_common_stress <-
names(sort(table(data_imputed_long$stress), decreasing = TRUE))[1]
most_common_age <-
names(sort(table(data_imputed_long$age_cat), decreasing = TRUE))[1]
most_common_sex <-
names(sort(table(data_imputed_long$sex), decreasing = TRUE))[1]
predictor_grid <- expand.grid(
group = c(0, 1),
time = c('baseline', 'follow-up'),
SCON_scaled = seq(-4, 2, length.out = 3),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
)
posterior_predictions <-
posterior_epred(model_brm_02,
newdata = predictor_grid,
re_formula = NA)
emmeans_summary <- predictor_grid %>%
mutate(predicted_mean = colMeans(posterior_predictions),
lower_CI = apply(posterior_predictions, 2, quantile, probs = 0.025),
upper_CI = apply(posterior_predictions, 2, quantile, probs = 0.975))
emmeans_summary$SCON_group <-
as.factor(ifelse(emmeans_summary$SCON_scaled == -4, "Low",
ifelse(emmeans_summary$SCON_scaled == -1,
"Moderate", "High")))
emmeans_summary$SCON_group <-
factor(emmeans_summary$SCON_group,
levels = c("Low", "Moderate", "High"))
emmeans_summary$group <-
as.factor(ifelse(emmeans_summary$group == 0, "Control", "Intervention"))
emmeans_summary <-
emmeans_summary[, c("group", "time", "SCON_group", "predicted_mean",
"lower_CI", "upper_CI")]
# plot conditional effects
ggplot(emmeans_summary, aes(x = group, y = predicted_mean, color = factor(time))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Intervention Exposure",
y = "Predicted Work-Family Interference (WFI)",
color = "Time") +
scale_color_manual(values = c("red", "blue"), labels = c("Baseline", "Follow-up")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
# plot conditional effects
ggplot(emmeans_summary, aes(x = group, y = predicted_mean, color = factor(time))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Intervention Exposure",
y = "Predicted Work-Family Interference (WFI)",
color = "Time") +
scale_color_manual(values = c("red", "blue"), labels = c("Baseline", "Follow-up")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
# plot conditional effects
ggplot(emmeans_summary, aes(x = time, y = predicted_mean, color = factor(group))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Time",
y = "Predicted Work-Family Interference (WFI)",
color = "Group") +
scale_color_manual(values = c("red", "blue"), labels = c("Baseline", "Follow-up")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
# plot conditional effects
ggplot(emmeans_summary, aes(x = time, y = predicted_mean, color = factor(group))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Time",
y = "Predicted Work-Family Interference (WFI)",
color = "Group") +
scale_color_manual(values = c("red", "blue"), labels = c("Control", "Intervention")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
# extract control covariates
most_common_stress <-
names(sort(table(data_imputed_long$stress), decreasing = TRUE))[1]
most_common_age <-
names(sort(table(data_imputed_long$age_cat), decreasing = TRUE))[1]
most_common_sex <-
names(sort(table(data_imputed_long$sex), decreasing = TRUE))[1]
# model-02-WFI
emtrends(model_brm_02, ~ group * time, var = "SCON_scaled",
at = list(
SCON_scaled = c(-4, -1, 2),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
))
em_results <-
emtrends(model_brm_02, ~ group * time, var = "SCON_scaled")
# model-02-WFI
em_results <-
emtrends(model_brm_02, ~ group * time, var = "SCON_scaled",
at = list(
SCON_scaled = c(-4, -1, 2),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
))
print(em_results)
pairs(em_results)
# quadratic-trends
SCON_levels <- c(-4, -1, 2)
em_quad_slopes <-
emtrends(model_brm_02, ~ group * time,
var = "I(SCON_scaled^2)",
at = list(SCON_scaled = SCON_levels))
# quadratic-trends
em_quad_slopes <-
emtrends(model_brm_02, ~ group * time,
var = "I(SCON_scaled^2)",
at = list(
SCON_scaled = c(-4, -1, 2),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
))
# Display results
summary(em_simple_slopes)
# Display results
print(em_simple_slopes)
# Display results
print(em_quad_slopes)
pairs(em_quad_slopes)
# model-02-WFI-linear-trends
em_results <-
emtrends(model_brm_02, ~ group * time, var = "SCON_scaled",
at = list(
SCON_scaled = c(-4, -1, 2),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
))
print(em_results)
pairs(em_results)
# Display results
print(em_quad_slopes)
View(data_imputed_long)
View(data_imputed_pooled)
View(data_imputed_pooled)
View(data_imputed_pooled_all)
# extract controls
most_common_stress <-
names(sort(table(data_imputed_long$stress), decreasing = TRUE))[1]
most_common_age <-
names(sort(table(data_imputed_long$age_cat), decreasing = TRUE))[1]
most_common_sex <-
names(sort(table(data_imputed_long$sex), decreasing = TRUE))[1]
max(data_imputed_long$SCON_scaled)
min(data_imputed_long$SCON_scaled)
# model-02-WFI-linear-trends
em_results <-
emtrends(model_brm_02, ~ group * time, var = "SCON_scaled",
at = list(
SCON_scaled = seq(min(data_imputed_long$SCON_scaled),
max(data_imputed_long$SCON_scaled), length.out = 3),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
))
print(em_results)
pairs(em_results)
# quadratic-trends
em_quad_slopes <-
emtrends(model_brm_02, ~ group * time,
var = "I(SCON_scaled^2)",
at = list(
SCON_scaled = c(-4, -1, 2),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
))
# quadratic-trends
em_quad_slopes <-
emtrends(model_brm_02, ~ group * time,
var = "I(SCON_scaled^2)",
at = list(
SCON_scaled = seq(min(data_imputed_long$SCON_scaled),
max(data_imputed_long$SCON_scaled), length.out = 3),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
))
# Display results
print(em_quad_slopes)
pairs(em_quad_slopes)
# create data frame of predictions (control for age, sex, stress)
most_common_stress <-
names(sort(table(data_imputed_long$stress), decreasing = TRUE))[1]
most_common_age <-
names(sort(table(data_imputed_long$age_cat), decreasing = TRUE))[1]
most_common_sex <-
names(sort(table(data_imputed_long$sex), decreasing = TRUE))[1]
predictor_grid <- expand.grid(
group = c(0, 1),
time = c('baseline', 'follow-up'),
SCON_scaled = seq(min(data_imputed_long$SCON_scaled),
max(data_imputed_long$SCON_scaled), length.out = 3),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
)
posterior_predictions <-
posterior_epred(model_brm_02,
newdata = predictor_grid,
re_formula = NA)
emmeans_summary <- predictor_grid %>%
mutate(predicted_mean = colMeans(posterior_predictions),
lower_CI = apply(posterior_predictions, 2, quantile, probs = 0.025),
upper_CI = apply(posterior_predictions, 2, quantile, probs = 0.975))
emmeans_summary$SCON_group <-
as.factor(ifelse(emmeans_summary$SCON_scaled == -4, "Low",
ifelse(emmeans_summary$SCON_scaled == -1,
"Moderate", "High")))
emmeans_summary$SCON_group <-
factor(emmeans_summary$SCON_group,
levels = c("Low", "Moderate", "High"))
emmeans_summary$group <-
as.factor(ifelse(emmeans_summary$group == 0, "Control", "Intervention"))
emmeans_summary <-
emmeans_summary[, c("group", "time", "SCON_group", "predicted_mean",
"lower_CI", "upper_CI")]
# plot conditional effects
ggplot(emmeans_summary, aes(x = time, y = predicted_mean, color = factor(group))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Time",
y = "Predicted Work-Family Interference (WFI)",
color = "Group") +
scale_color_manual(values = c("red", "blue"), labels = c("Control", "Intervention")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
min(data_imputed_long$SCON_scaled)
max(data_imputed_long$SCON_scaled)
# create data frame of predictions (control for age, sex, stress)
most_common_stress <-
names(sort(table(data_imputed_long$stress), decreasing = TRUE))[1]
most_common_age <-
names(sort(table(data_imputed_long$age_cat), decreasing = TRUE))[1]
most_common_sex <-
names(sort(table(data_imputed_long$sex), decreasing = TRUE))[1]
predictor_grid <- expand.grid(
group = c(0, 1),
time = c('baseline', 'follow-up'),
SCON_scaled = seq(min(data_imputed_long$SCON_scaled),
max(data_imputed_long$SCON_scaled), length.out = 3),
stress = most_common_stress,
age_cat = most_common_age,
sex = most_common_sex
)
View(predictor_grid)
posterior_predictions <-
posterior_epred(model_brm_02,
newdata = predictor_grid,
re_formula = NA)
emmeans_summary <- predictor_grid %>%
mutate(predicted_mean = colMeans(posterior_predictions),
lower_CI = apply(posterior_predictions, 2, quantile, probs = 0.025),
upper_CI = apply(posterior_predictions, 2, quantile, probs = 0.975))
scale_SCON <- seq(min(data_imputed_long$SCON_scaled),
max(data_imputed_long$SCON_scaled), length.out = 3)
scale_SCON[1]
emmeans_summary$SCON_group <-
as.factor(ifelse(emmeans_summary$SCON_scaled == scale_SCON[1], "Low",
ifelse(emmeans_summary$SCON_scaled == scale_SCON[2],
"Moderate", "High")))
emmeans_summary$SCON_group <-
factor(emmeans_summary$SCON_group,
levels = c("Low", "Moderate", "High"))
emmeans_summary$group <-
as.factor(ifelse(emmeans_summary$group == 0, "Control", "Intervention"))
emmeans_summary <-
emmeans_summary[, c("group", "time", "SCON_group", "predicted_mean",
"lower_CI", "upper_CI")]
# plot conditional effects
ggplot(emmeans_summary, aes(x = time, y = predicted_mean, color = factor(group))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Time",
y = "Predicted Work-Family Interference (WFI)",
color = "Group") +
scale_color_manual(values = c("red", "blue"), labels = c("Control", "Intervention")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
group_labels <- c("Control", "Intervention")
names(group_labels) <- c(0, 1)
colour_vals <- c("#FFA500", "#00008B")
ggplot(data_imputed_pooled_all, aes(x = SCON, y = WFI, color = factor(time))) +
geom_point(alpha = 0.3, size = 4) +
scale_color_manual(values = colour_vals, labels = c("Baeline", "Follow-up")) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = TRUE, size = 3) +
facet_wrap(~ group, labeller = labeller(group = group_labels)) +
labs(
title = "Non-Linear Relationship Between Self-Control and WFI",
x = "Self-Control (SCON)",
y = "Work-Family Interference (WFI)",
color = "Time"
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
data_imputed_pooled_all$SCON_cat <- factor(ifelse(data_imputed_pooled_all$SCON %in% c(1, 2, 3, 4),
"Low",
iflese(data_imputed_pooled_all$SCON %in% c(5, 6, 7, 8),
"Moderate", "High")),
order = TRUE,
levels = c("Low", "Moderate", "High"))
data_imputed_pooled_all$SCON_cat <- factor(ifelse(data_imputed_pooled_all$SCON %in% c(1, 2, 3, 4),
"Low",
ifelse(data_imputed_pooled_all$SCON %in% c(5, 6, 7, 8),
"Moderate", "High")),
order = TRUE,
levels = c("Low", "Moderate", "High"))
wfi_model_cat <- brm(WFI ~ group*time*SCON_cat + stress + age_cat + sex + (1 | id),
family = Gamma(link = "log"),
data = data_imputed_pooled_all,
chains = 4,
cores = 4,
iter = 4000,
warmup = 500,
backend = "cmdstanr",
control = list(adapt_delta = 0.8, max_treedepth = 10),
save_pars = save_pars(all = TRUE))
summary(wfi_model_cat)
predictor_grid <- expand.grid(
group = c(0, 1),
time = c('baseline', 'follow-up'),
SCON_scaled = seq(min(data_imputed_long$SCON_scaled),
max(data_imputed_long$SCON_scaled), length.out = 3),
stress = 5,
age_cat = most_common_age,
sex = most_common_sex
)
posterior_predictions <-
posterior_epred(model_brm_02,
newdata = predictor_grid,
re_formula = NA)
emmeans_summary <- predictor_grid %>%
mutate(predicted_mean = colMeans(posterior_predictions),
lower_CI = apply(posterior_predictions, 2, quantile, probs = 0.025),
upper_CI = apply(posterior_predictions, 2, quantile, probs = 0.975))
emmeans_summary$SCON_group <-
as.factor(ifelse(emmeans_summary$SCON_scaled == scale_SCON[1], "Low",
ifelse(emmeans_summary$SCON_scaled == scale_SCON[2],
"Moderate", "High")))
emmeans_summary$SCON_group <-
factor(emmeans_summary$SCON_group,
levels = c("Low", "Moderate", "High"))
emmeans_summary$group <-
as.factor(ifelse(emmeans_summary$group == 0, "Control", "Intervention"))
emmeans_summary <-
emmeans_summary[, c("group", "time", "SCON_group", "predicted_mean",
"lower_CI", "upper_CI")]
# plot conditional effects
ggplot(emmeans_summary, aes(x = time, y = predicted_mean, color = factor(group))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Time",
y = "Predicted Work-Family Interference (WFI)",
color = "Group") +
scale_color_manual(values = c("red", "blue"), labels = c("Control", "Intervention")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
predictor_grid <- expand.grid(
group = c(0, 1),
time = c('baseline', 'follow-up'),
SCON_scaled = seq(min(data_imputed_long$SCON_scaled),
max(data_imputed_long$SCON_scaled), length.out = 3),
stress = 1,
age_cat = most_common_age,
sex = most_common_sex
)
posterior_predictions <-
posterior_epred(model_brm_02,
newdata = predictor_grid,
re_formula = NA)
emmeans_summary <- predictor_grid %>%
mutate(predicted_mean = colMeans(posterior_predictions),
lower_CI = apply(posterior_predictions, 2, quantile, probs = 0.025),
upper_CI = apply(posterior_predictions, 2, quantile, probs = 0.975))
emmeans_summary$SCON_group <-
as.factor(ifelse(emmeans_summary$SCON_scaled == scale_SCON[1], "Low",
ifelse(emmeans_summary$SCON_scaled == scale_SCON[2],
"Moderate", "High")))
emmeans_summary$SCON_group <-
factor(emmeans_summary$SCON_group,
levels = c("Low", "Moderate", "High"))
emmeans_summary$group <-
as.factor(ifelse(emmeans_summary$group == 0, "Control", "Intervention"))
emmeans_summary <-
emmeans_summary[, c("group", "time", "SCON_group", "predicted_mean",
"lower_CI", "upper_CI")]
# plot conditional effects
ggplot(emmeans_summary, aes(x = time, y = predicted_mean, color = factor(group))) +
geom_point(position = position_dodge(0.5), size = 3) +
geom_errorbar(aes(ymin = lower_CI, ymax = upper_CI),
width = 0.2, position = position_dodge(0.5)) +
facet_wrap(~ SCON_group) +
labs(title = "Predicted WFI by Self-Control, Group, and Time",
x = "Time",
y = "Predicted Work-Family Interference (WFI)",
color = "Group") +
scale_color_manual(values = c("red", "blue"), labels = c("Control", "Intervention")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
View(predictor_grid)
